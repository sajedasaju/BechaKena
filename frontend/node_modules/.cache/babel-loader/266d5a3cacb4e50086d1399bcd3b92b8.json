{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["C:/Users/Msi/Desktop/BechaKena/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","PRODUCT_SAVE_REQUEST","userSignin","userInfo","Axios","post","headers","token","PRODUCT_SAVE_SUCCESS","detailsProduct","productId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EACIC,uBADJ,EAC4BC,uBAD5B,EACoDC,oBADpD,QACgF,+BADhF;;AAGA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAACP;AAAP,KAAD,CAAR;AACJ,UAAM;AAACQ,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,oBAAP;AAA6BS,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AAEC,GALD,CAMA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,iBAAP;AAA0BW,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AAEJ,CAXD;;AAcA,MAAMC,WAAW,GAAIC,OAAD,IAAa,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC3D,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAES,oBAAR;AAA8BN,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAR;AACA,UAAM;AAAEG,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAA+BH,QAAQ,EAA7C;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMW,KAAK,CAACC,IAAN,CAAW,eAAX,EAA4BN,OAA5B,EAAqC;AAC1DO,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYH,QAAQ,CAACI;AAD/B;AADiD,KAArC,CAAvB;AAKAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEgB,oBAAR;AAA8Bb,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GATD,CAUA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,oBAAP;AAA6BM,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AAEH;AAEJ,CAhBD;;AAmBA,MAAMY,cAAc,GAAEC,SAAD,IAAe,MAAOnB,QAAP,IAAoB;AACpD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAACL,uBAAP;AAAgCQ,MAAAA,OAAO,EAAEe;AAAzC,KAAD,CAAR;AACA,UAAM;AAACjB,MAAAA;AAAD,QAAQ,MAAMV,KAAK,CAACW,GAAN,CAAU,mBAAmBgB,SAA7B,CAApB;AACAnB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,uBAAP;AAAgCO,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,oBAAP;AAA6BM,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,SAASP,YAAT,EAAwBmB,cAAxB,EAAwCX,WAAxC","sourcesContent":["import axios from \"axios\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\"\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({ type:PRODUCT_LIST_REQUEST });\r\n    const {data} = await axios.get(\"/api/products\");\r\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload: data });\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n      const { userSignin: { userInfo } } = getState();\r\n      const { data } = await Axios.post('/api/products', product, {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + userInfo.token,\r\n        }\r\n      });\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst detailsProduct=(productId) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type:PRODUCT_DETAILS_REQUEST ,payload: productId});\r\n        const {data} =await axios.get(\"/api/products/\" + productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nexport { listProducts , detailsProduct ,saveProduct};"]},"metadata":{},"sourceType":"module"}