{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\Desktop\\\\BechaKena(Ami)\\\\frontend\\\\src\\\\screens\\\\ProductsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts, saveProduct, deleteProduct } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductsScreen(props) {\n  _s();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error\n  } = productList;\n  const productSave = useSelector(state => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave;\n  const productDelete = useSelector(state => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete\n  } = productDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n\n    dispatch(listProducts());\n    return () => {//\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = product => {\n    setModalVisible(true);\n    setId(product._id);\n    setName(product.name);\n    setPrice(product.price);\n    setDescription(product.description);\n    setImage(product.image);\n    setBrand(product.brand);\n    setCategory(product.category);\n    setCountInStock(product.countInStock);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      _id: id,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  const deleteHandler = product => {\n    dispatch(deleteProduct(product._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content content-margined\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button primary\",\n        onClick: () => openModal({}),\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Create Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [loadingSave && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this), errorSave && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errorSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: name,\n              id: \"name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"price\",\n              value: price,\n              id: \"price\",\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"image\",\n              value: image,\n              id: \"image\",\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"brand\",\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"brand\",\n              value: brand,\n              id: \"brand\",\n              onChange: e => setBrand(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"countInStock\",\n              children: \"Count In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"countInStock\",\n              value: countInStock,\n              id: \"countInStock\",\n              onChange: e => setCountInStock(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"category\",\n              value: category,\n              id: \"category\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 69\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"description\",\n              value: description,\n              id: \"description\",\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button primary\",\n              children: id ? 'Update' : 'Create'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setModalVisible(false),\n              className: \"button secondary\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => openModal(product),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 24\n              }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => deleteHandler(product),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 24\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsScreen, \"J74XCnCMkFJMTaj7K7dm4ti821I=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProductsScreen;\nexport default ProductsScreen; // import React, { useEffect, useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import axios from 'axios';\n// import {\n//   saveProduct,\n//   listProducts,\n//   deleteProdcut,\n// } from '../actions/productActions';\n// function ProductsScreen(props) {\n//   const [modalVisible, setModalVisible] = useState(false);\n//   const [id, setId] = useState('');\n//   const [name, setName] = useState('');\n//   const [price, setPrice] = useState('');\n//   const [image, setImage] = useState('');\n//   const [brand, setBrand] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [countInStock, setCountInStock] = useState('');\n//   const [description, setDescription] = useState('');\n//   const productList = useSelector((state) => state.productList);\n//   const { loading, products, error } = productList;\n//   const productSave = useSelector((state) => state.productSave);\n//   const {\n//     loading: loadingSave,\n//     success: successSave,\n//     error: errorSave,\n//   } = productSave;\n//   const productDelete = useSelector((state) => state.productDelete);\n//   const {\n//     loading: loadingDelete,\n//     success: successDelete,\n//     error: errorDelete,\n//   } = productDelete;\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (successSave) {\n//       setModalVisible(false);\n//     }\n//     dispatch(listProducts());\n//     return () => {\n//       //\n//     };\n//   }, [successSave, successDelete]);\n//   const openModal = (product) => {\n//     setModalVisible(true);\n//     setId(product._id);\n//     setName(product.name);\n//     setPrice(product.price);\n//     setDescription(product.description);\n//     setImage(product.image);\n//     setBrand(product.brand);\n//     setCategory(product.category);\n//     setCountInStock(product.countInStock);\n//   };\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(\n//       saveProduct({\n//         _id: id,\n//         name,\n//         price,\n//         image,\n//         brand,\n//         category,\n//         countInStock,\n//         description,\n//       })\n//     );\n//   };\n//   const deleteHandler = (product) => {\n//     dispatch(deleteProdcut(product._id));\n//   };\n//   return (\n//     <div className=\"content content-margined\">\n//       <div className=\"product-header\">\n//         <h3>Products</h3>\n//         <button className=\"button primary\" onClick={() => openModal({})}>\n//           Create Product\n//         </button>\n//       </div>\n//       {modalVisible && (\n//         <div className=\"form\">\n//           <form onSubmit={submitHandler}>\n//             <ul className=\"form-container\">\n//               <li>\n//                 <h2>Create Product</h2>\n//               </li>\n//               <li>\n//                 {loadingSave && <div>Loading...</div>}\n//                 {errorSave && <div>{errorSave}</div>}\n//               </li>\n//               <li>\n//                 <label htmlFor=\"name\">Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={name}\n//                   id=\"name\"\n//                   onChange={(e) => setName(e.target.value)}\n//                 ></input>\n//               </li>\n//               <li>\n//                 <label htmlFor=\"price\">Price</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"price\"\n//                   value={price}\n//                   id=\"price\"\n//                   onChange={(e) => setPrice(e.target.value)}\n//                 ></input>\n//               </li>\n//               <li>\n//                 <label htmlFor=\"image\">Image</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"image\"\n//                   value={image}\n//                   id=\"image\"\n//                   onChange={(e) => setImage(e.target.value)}\n//                 ></input>\n//               </li>\n//               <li>\n//                 <label htmlFor=\"brand\">Brand</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"brand\"\n//                   value={brand}\n//                   id=\"brand\"\n//                   onChange={(e) => setBrand(e.target.value)}\n//                 ></input>\n//               </li>\n//               <li>\n//                 <label htmlFor=\"countInStock\">CountInStock</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"countInStock\"\n//                   value={countInStock}\n//                   id=\"countInStock\"\n//                   onChange={(e) => setCountInStock(e.target.value)}\n//                 ></input>\n//               </li>\n//               <li>\n//                 <label htmlFor=\"name\">Category</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"category\"\n//                   value={category}\n//                   id=\"category\"\n//                   onChange={(e) => setCategory(e.target.value)}\n//                 ></input>\n//               </li>\n//               <li>\n//                 <label htmlFor=\"description\">Description</label>\n//                 <textarea\n//                   name=\"description\"\n//                   value={description}\n//                   id=\"description\"\n//                   onChange={(e) => setDescription(e.target.value)}\n//                 ></textarea>\n//               </li>\n//               <li>\n//                 <button type=\"submit\" className=\"button primary\">\n//                   {id ? 'Update' : 'Create'}\n//                 </button>\n//               </li>\n//               <li>\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setModalVisible(false)}\n//                   className=\"button secondary\"\n//                 >\n//                   Back\n//                 </button>\n//               </li>\n//             </ul>\n//           </form>\n//         </div>\n//       )}\n//       <div className=\"product-list\">\n//         <table className=\"table\">\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>Name</th>\n//               <th>Price</th>\n//               <th>Category</th>\n//               <th>Brand</th>\n//               <th>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) => (\n//               <tr key={product._id}>\n//                 <td>{product._id}</td>\n//                 <td>{product.name}</td>\n//                 <td>{product.price}</td>\n//                 <td>{product.category}</td>\n//                 <td>{product.brand}</td>\n//                 <td>\n//                   <button className=\"button\" onClick={() => openModal(product)}>\n//                     Edit\n//                   </button>{' '}\n//                   <button\n//                     className=\"button\"\n//                     onClick={() => deleteHandler(product)}\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n// export default ProductsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"sources":["C:/Users/Msi/Desktop/BechaKena(Ami)/frontend/src/screens/ProductsScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","listProducts","saveProduct","deleteProduct","ProductsScreen","props","modalVisible","setModalVisible","id","setId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","productList","state","loading","products","error","productSave","loadingSave","success","successSave","errorSave","productDelete","loadingDelete","successDelete","errorDelete","dispatch","openModal","product","_id","submitHandler","e","preventDefault","deleteHandler","target","value","map"],"mappings":"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":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts, saveProduct,deleteProduct } from '../actions/productActions';\r\n\r\n\r\nfunction ProductsScreen(props){\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const productList = useSelector((state) => state.productList);\r\n    const {loading,products,error} = productList;\r\n    const productSave = useSelector((state) => state.productSave);\r\n    const {loading: loadingSave, success: successSave,  error: errorSave} = productSave;\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {loading: loadingDelete, success: successDelete,  error: errorDelete} = productDelete;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(successSave){\r\n            setModalVisible(false);\r\n        }\r\n        dispatch(listProducts());\r\n        return () =>{\r\n            //\r\n        };\r\n    }, [successSave,successDelete]);\r\n\r\n    const openModal = (product) => {\r\n        setModalVisible(true);\r\n        setId(product._id);\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setDescription(product.description);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n      };\r\n      const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n          saveProduct({\r\n            _id: id,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description,\r\n          })\r\n        );\r\n      };\r\n      const deleteHandler = (product) =>{\r\n          dispatch(deleteProduct(product._id));\r\n      }\r\n\r\n    return  (\r\n    <div className=\"content content-margined\">\r\n        <div className=\"product-header\">\r\n            <h3>Products</h3>\r\n            <button className=\"button primary\" onClick={() => openModal({})}>Create Product</button>\r\n        </div>\r\n   {modalVisible && (\r\n     <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                    <h2>Create Product</h2>\r\n                </li>\r\n                <li>\r\n                    {loadingSave && <div>Loading...</div>}\r\n                    {errorSave && <div>{errorSave}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"name\">Name</label><br/>\r\n                    <input type=\"text\" name=\"name\" value={name} id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"price\">Price</label><br/>\r\n                    <input type=\"text\" name=\"price\" value={price} id=\"price\" onChange={(e) => setPrice(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"image\">Image</label><br/>\r\n                    <input type=\"text\" name=\"image\" value={image} id=\"image\" onChange={(e) => setImage(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"brand\">Brand</label><br/>\r\n                    <input type=\"text\" name=\"brand\" value={brand} id=\"brand\" onChange={(e) => setBrand(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"countInStock\">Count In Stock</label><br/>\r\n                    <input type=\"text\" name=\"countInStock\" value={countInStock} id=\"countInStock\" onChange={(e) => setCountInStock(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"category\">Category</label><br/>\r\n                    <input type=\"text\" name=\"category\" value={category} id=\"category\" onChange={(e) => setCategory(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"description\">Description</label><br/>\r\n                    <textarea type=\"text\" name=\"description\" value={description}  id=\"description\" onChange={(e) => setDescription(e.target.value)}>\r\n                    </textarea>\r\n                </li>\r\n                <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? 'Update' : 'Create'}</button>\r\n                </li>\r\n                <li>\r\n                    <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\">\r\n                    Back</button>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n    )}\r\n    \r\n\r\n\r\n        <div className=\"product-list\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                       <th>ID</th> \r\n                       <th>Name</th>\r\n                       <th>Price</th>\r\n                       <th>Category</th>\r\n                       <th>Brand</th>\r\n                       <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((product) => (\r\n                    <tr key={product._id}>\r\n                       <td>{product._id}</td>\r\n                       <td>{product.name}</td>\r\n                       <td>{product.price}</td>\r\n                       <td>{product.category}</td>\r\n                       <td>{product.brand}</td>\r\n                       <td>\r\n                       <button className=\"button\" onClick={() => openModal(product)}>Edit</button> {' '}\r\n                        <button className=\"button\"  onClick={() => deleteHandler(product)}>Delete</button>\r\n                       </td>\r\n                       </tr>\r\n                       ))}    \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div> \r\n    );\r\n}\r\nexport default ProductsScreen;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import axios from 'axios';\r\n// import {\r\n//   saveProduct,\r\n//   listProducts,\r\n//   deleteProdcut,\r\n// } from '../actions/productActions';\r\n\r\n// function ProductsScreen(props) {\r\n//   const [modalVisible, setModalVisible] = useState(false);\r\n//   const [id, setId] = useState('');\r\n//   const [name, setName] = useState('');\r\n//   const [price, setPrice] = useState('');\r\n//   const [image, setImage] = useState('');\r\n//   const [brand, setBrand] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [countInStock, setCountInStock] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const productList = useSelector((state) => state.productList);\r\n//   const { loading, products, error } = productList;\r\n\r\n//   const productSave = useSelector((state) => state.productSave);\r\n//   const {\r\n//     loading: loadingSave,\r\n//     success: successSave,\r\n//     error: errorSave,\r\n//   } = productSave;\r\n\r\n//   const productDelete = useSelector((state) => state.productDelete);\r\n//   const {\r\n//     loading: loadingDelete,\r\n//     success: successDelete,\r\n//     error: errorDelete,\r\n//   } = productDelete;\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     if (successSave) {\r\n//       setModalVisible(false);\r\n//     }\r\n//     dispatch(listProducts());\r\n//     return () => {\r\n//       //\r\n//     };\r\n//   }, [successSave, successDelete]);\r\n\r\n//   const openModal = (product) => {\r\n//     setModalVisible(true);\r\n//     setId(product._id);\r\n//     setName(product.name);\r\n//     setPrice(product.price);\r\n//     setDescription(product.description);\r\n//     setImage(product.image);\r\n//     setBrand(product.brand);\r\n//     setCategory(product.category);\r\n//     setCountInStock(product.countInStock);\r\n//   };\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(\r\n//       saveProduct({\r\n//         _id: id,\r\n//         name,\r\n//         price,\r\n//         image,\r\n//         brand,\r\n//         category,\r\n//         countInStock,\r\n//         description,\r\n//       })\r\n//     );\r\n//   };\r\n//   const deleteHandler = (product) => {\r\n//     dispatch(deleteProdcut(product._id));\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div className=\"content content-margined\">\r\n//       <div className=\"product-header\">\r\n//         <h3>Products</h3>\r\n//         <button className=\"button primary\" onClick={() => openModal({})}>\r\n//           Create Product\r\n//         </button>\r\n//       </div>\r\n//       {modalVisible && (\r\n//         <div className=\"form\">\r\n//           <form onSubmit={submitHandler}>\r\n//             <ul className=\"form-container\">\r\n//               <li>\r\n//                 <h2>Create Product</h2>\r\n//               </li>\r\n//               <li>\r\n//                 {loadingSave && <div>Loading...</div>}\r\n//                 {errorSave && <div>{errorSave}</div>}\r\n//               </li>\r\n\r\n//               <li>\r\n//                 <label htmlFor=\"name\">Name</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   value={name}\r\n//                   id=\"name\"\r\n//                   onChange={(e) => setName(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"price\">Price</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"price\"\r\n//                   value={price}\r\n//                   id=\"price\"\r\n//                   onChange={(e) => setPrice(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"image\">Image</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"image\"\r\n//                   value={image}\r\n//                   id=\"image\"\r\n//                   onChange={(e) => setImage(e.target.value)}\r\n//                 ></input>\r\n               \r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"brand\">Brand</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"brand\"\r\n//                   value={brand}\r\n//                   id=\"brand\"\r\n//                   onChange={(e) => setBrand(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"countInStock\">CountInStock</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"countInStock\"\r\n//                   value={countInStock}\r\n//                   id=\"countInStock\"\r\n//                   onChange={(e) => setCountInStock(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"name\">Category</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"category\"\r\n//                   value={category}\r\n//                   id=\"category\"\r\n//                   onChange={(e) => setCategory(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"description\">Description</label>\r\n//                 <textarea\r\n//                   name=\"description\"\r\n//                   value={description}\r\n//                   id=\"description\"\r\n//                   onChange={(e) => setDescription(e.target.value)}\r\n//                 ></textarea>\r\n//               </li>\r\n//               <li>\r\n//                 <button type=\"submit\" className=\"button primary\">\r\n//                   {id ? 'Update' : 'Create'}\r\n//                 </button>\r\n//               </li>\r\n//               <li>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setModalVisible(false)}\r\n//                   className=\"button secondary\"\r\n//                 >\r\n//                   Back\r\n//                 </button>\r\n//               </li>\r\n//             </ul>\r\n//           </form>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"product-list\">\r\n//         <table className=\"table\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>Name</th>\r\n//               <th>Price</th>\r\n//               <th>Category</th>\r\n//               <th>Brand</th>\r\n//               <th>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products.map((product) => (\r\n//               <tr key={product._id}>\r\n//                 <td>{product._id}</td>\r\n//                 <td>{product.name}</td>\r\n//                 <td>{product.price}</td>\r\n//                 <td>{product.category}</td>\r\n//                 <td>{product.brand}</td>\r\n//                 <td>\r\n//                   <button className=\"button\" onClick={() => openModal(product)}>\r\n//                     Edit\r\n//                   </button>{' '}\r\n//                   <button\r\n//                     className=\"button\"\r\n//                     onClick={() => deleteHandler(product)}\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default ProductsScreen;"]},"metadata":{},"sourceType":"module"}