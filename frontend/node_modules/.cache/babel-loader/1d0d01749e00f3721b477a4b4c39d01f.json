{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Msi\\\\Desktop\\\\BechaKena\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(props) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n\n  const removeFromCartHandler = productId => {\n    dispatch(removeFromCart(productId));\n  };\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, []);\n\n  const checkoutHandler = () => {\n    props.history.push(\"/signin?redirect=shipping\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cart-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shopping Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cart is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this) : cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image,\n              alt: \"product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/product\" + item.product,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Qty:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: item.qty,\n                onChange: e => dispatch(addToCart(item.product, e.target.value)),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"button\",\n                onClick: () => removeFromCartHandler(item.product),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-price\",\n            children: [\"\\u09F3\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Subtotal ( \", cartItems.reduce((a, c) => a + c.qty, 0), \" items) : \\u09F3\", cartItems.reduce((a, c) => a + c.price * c.qty, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkoutHandler,\n        className: \"button primary full-width\",\n        disabled: cartItems.length === 0,\n        children: \"Proceed to Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\nexport default CartScreen; // import React, { useEffect } from 'react';\n// import { addToCart, removeFromCart } from '../actions/cartActions';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// function CartScreen(props) {\n//   const cart = useSelector(state => state.cart);\n//   const { cartItems } = cart;\n//   const productId = props.match.params.id;\n//   const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n//   const dispatch = useDispatch();\n//   const removeFromCartHandler = (productId) => {\n//     dispatch(removeFromCart(productId));\n//   }\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, []);\n//   const checkoutHandler = () => {\n//     props.history.push(\"/signin?redirect=shipping\");\n//   }\n//   return <div className=\"cart\">\n//     <div className=\"cart-list\">\n//       <ul className=\"cart-list-container\">\n//         <li>\n//           <h3>\n//             Shopping Cart\n//           </h3>\n//           <div>\n//             Price\n//           </div>\n//         </li>\n//         {\n//           cartItems.length === 0 ?\n//             <div>\n//               Cart is empty\n//           </div>\n//             :\n//             cartItems.map(item =>\n//               <li>\n//                 <div className=\"cart-image\">\n//                   <img src={item.image} alt=\"product\" />\n//                 </div>\n//                 <div className=\"cart-name\">\n//                   <div>\n//                     <Link to={\"/product/\" + item.product}>\n//                       {item.name}\n//                     </Link>\n//                   </div>\n//                   <div>\n//                     Qty:\n//                   <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\n//                       {[...Array(item.countInStock).keys()].map(x =>\n//                         <option key={x + 1} value={x + 1}>{x + 1}</option>\n//                       )}\n//                     </select>\n//                     <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)} >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 </div>\n//                 <div className=\"cart-price\">\n//                   ${item.price}\n//                 </div>\n//               </li>\n//             )\n//         }\n//       </ul>\n//     </div>\n//     <div className=\"cart-action\">\n//       <h3>\n//         Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\n//         :\n//          $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n//       </h3>\n//       <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\n//         Proceed to Checkout\n//       </button>\n//     </div>\n//   </div>\n// }\n// export default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/Msi/Desktop/BechaKena/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","addToCart","removeFromCart","Link","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","removeFromCartHandler","checkoutHandler","history","push","length","map","item","image","product","name","e","target","value","Array","countInStock","keys","x","price","reduce","a","c"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart} from '../actions/cartActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CartScreen(props){\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search? Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) =>{\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    },[]);\r\n\r\n    const checkoutHandler = ()=>{\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n           <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ? \r\n                    <div>\r\n                        Cart is empty\r\n                    </div>\r\n                    :\r\n                    cartItems.map(item =>\r\n                        <li>\r\n                           <div className=\"cart-image\">\r\n                            <img src={item.image} alt=\"product\"/>\r\n                            </div>\r\n                            <div className=\"cart-name\">\r\n                              <div>\r\n                                  <Link to={\"/product\" + item.product}>\r\n                                      {item.name}\r\n                                  </Link> \r\n                              </div>\r\n                            <div>\r\n                                Qty:\r\n                    <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                      {[...Array(item.countInStock).keys()].map(x =>\r\n                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                      )}\r\n                    </select>\r\n                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)} >\r\n                      Delete\r\n                    </button>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"cart-price\">\r\n                                ৳{item.price}\r\n                            </div> \r\n                           </li> \r\n                           )\r\n                    }\r\n           </ul>\r\n        </div> \r\n        <div className=\"cart-action\"> \r\n            <h3>\r\n              Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n              :\r\n             ৳{cartItems.reduce((a,c) => a + c.price* c.qty, 0)}  \r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0 }>\r\n                Proceed to Checkout\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nexport default CartScreen;\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { addToCart, removeFromCart } from '../actions/cartActions';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n// function CartScreen(props) {\r\n\r\n//   const cart = useSelector(state => state.cart);\r\n\r\n//   const { cartItems } = cart;\r\n\r\n//   const productId = props.match.params.id;\r\n//   const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n//   const dispatch = useDispatch();\r\n//   const removeFromCartHandler = (productId) => {\r\n//     dispatch(removeFromCart(productId));\r\n//   }\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       dispatch(addToCart(productId, qty));\r\n//     }\r\n//   }, []);\r\n\r\n//   const checkoutHandler = () => {\r\n//     props.history.push(\"/signin?redirect=shipping\");\r\n//   }\r\n\r\n//   return <div className=\"cart\">\r\n//     <div className=\"cart-list\">\r\n//       <ul className=\"cart-list-container\">\r\n//         <li>\r\n//           <h3>\r\n//             Shopping Cart\r\n//           </h3>\r\n//           <div>\r\n//             Price\r\n//           </div>\r\n//         </li>\r\n//         {\r\n//           cartItems.length === 0 ?\r\n//             <div>\r\n//               Cart is empty\r\n//           </div>\r\n//             :\r\n//             cartItems.map(item =>\r\n//               <li>\r\n//                 <div className=\"cart-image\">\r\n//                   <img src={item.image} alt=\"product\" />\r\n//                 </div>\r\n//                 <div className=\"cart-name\">\r\n//                   <div>\r\n//                     <Link to={\"/product/\" + item.product}>\r\n//                       {item.name}\r\n//                     </Link>\r\n\r\n//                   </div>\r\n//                   <div>\r\n//                     Qty:\r\n//                   <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n//                       {[...Array(item.countInStock).keys()].map(x =>\r\n//                         <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n//                       )}\r\n//                     </select>\r\n//                     <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)} >\r\n//                       Delete\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"cart-price\">\r\n//                   ${item.price}\r\n//                 </div>\r\n//               </li>\r\n//             )\r\n//         }\r\n//       </ul>\r\n\r\n//     </div>\r\n//     <div className=\"cart-action\">\r\n//       <h3>\r\n//         Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n//         :\r\n//          $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n//       </h3>\r\n//       <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n//         Proceed to Checkout\r\n//       </button>\r\n\r\n//     </div>\r\n\r\n//   </div>\r\n// }\r\n\r\n// export default CartScreen;"]},"metadata":{},"sourceType":"module"}