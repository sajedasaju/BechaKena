[{"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\index.js":"1","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\App.js":"3","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\data.js":"4","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\Screens\\HomeScreen.js":"5","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\Screens\\ProductScreen.js":"6","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\store.js":"7","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\productReducers.js":"8","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\HomeScreen.js":"9","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\productConstants.js":"11","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\productActions.js":"12","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\cartReducers.js":"13","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\cartConstants.js":"14","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\cartActions.js":"16","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\SigninScreen.js":"17","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\userActions.js":"18","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\userConstants.js":"19","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\userReducers.js":"20","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\RegisterScreen.js":"21","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ProductsScreen.js":"22","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ShippingScreen.js":"23","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\components\\CheckoutSteps.js":"24","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\PaymentScreen.js":"25","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\PlaceOrderScreen.js":"26","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\OrderScreen.js":"27","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\OrdersScreen.js":"28","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\orderConstants.js":"30","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\orderReducers.js":"31","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ProfileScreen.js":"32","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\components\\Rating.js":"33"},{"size":285,"mtime":1615886509530,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":4213,"mtime":1616328004743,"results":"37","hashOfConfig":"35"},{"size":903,"mtime":1615484664385,"results":"38","hashOfConfig":"35"},{"size":1359,"mtime":1615493271923,"results":"39","hashOfConfig":"35"},{"size":2086,"mtime":1615390117530,"results":"40","hashOfConfig":"35"},{"size":1675,"mtime":1616250294292,"results":"41","hashOfConfig":"35"},{"size":2845,"mtime":1616250742074,"results":"42","hashOfConfig":"35"},{"size":2874,"mtime":1616328255179,"results":"43","hashOfConfig":"35"},{"size":6342,"mtime":1616328186062,"results":"44","hashOfConfig":"35"},{"size":1036,"mtime":1616250805889,"results":"45","hashOfConfig":"35"},{"size":3601,"mtime":1616258549456,"results":"46","hashOfConfig":"35"},{"size":997,"mtime":1616247361182,"results":"47","hashOfConfig":"35"},{"size":208,"mtime":1616189074229,"results":"48","hashOfConfig":"35"},{"size":6298,"mtime":1616260862765,"results":"49","hashOfConfig":"35"},{"size":1219,"mtime":1616251009402,"results":"50","hashOfConfig":"35"},{"size":1956,"mtime":1616250669039,"results":"51","hashOfConfig":"35"},{"size":1995,"mtime":1616251097716,"results":"52","hashOfConfig":"35"},{"size":572,"mtime":1616250851463,"results":"53","hashOfConfig":"35"},{"size":1428,"mtime":1616250760335,"results":"54","hashOfConfig":"35"},{"size":2506,"mtime":1616250644930,"results":"55","hashOfConfig":"35"},{"size":13937,"mtime":1616258380652,"results":"56","hashOfConfig":"35"},{"size":2120,"mtime":1616250655625,"results":"57","hashOfConfig":"35"},{"size":412,"mtime":1616187288877,"results":"58","hashOfConfig":"35"},{"size":1469,"mtime":1616262081279,"results":"59","hashOfConfig":"35"},{"size":3782,"mtime":1616261052315,"results":"60","hashOfConfig":"35"},{"size":3511,"mtime":1616261096154,"results":"61","hashOfConfig":"35"},{"size":1958,"mtime":1616262900230,"results":"62","hashOfConfig":"35"},{"size":3535,"mtime":1616251046555,"results":"63","hashOfConfig":"35"},{"size":1052,"mtime":1616249855489,"results":"64","hashOfConfig":"35"},{"size":3162,"mtime":1616249895403,"results":"65","hashOfConfig":"35"},{"size":3862,"mtime":1616250596032,"results":"66","hashOfConfig":"35"},{"size":1509,"mtime":1616250959167,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1c3shu7",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\index.js",[],["151","152"],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reportWebVitals.js",[],["153","154"],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\App.js",["155"],"import React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport { useSelector } from 'react-redux';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProductsScreen from './screens/ProductsScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport OrdersScreen from './screens/OrdersScreen';\n\nfunction App() {\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const openMenu = () => {\n    document.querySelector('.sidebar').classList.add('open');\n  };\n  const closeMenu = () => {\n    document.querySelector('.sidebar').classList.remove('open');\n  };\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"header\">\n          <div className=\"brand\">\n            <button onClick={openMenu}>&#9776;</button>\n            <Link to=\"/\">BechaKena</Link>\n          </div>\n          <div className=\"header-links\">\n           <a href=\"cart.html\">Cart</a> \n            {userInfo ? (\n              <Link to=\"/profile\">{userInfo.name}</Link>\n            ) : (\n              <Link to=\"/signin\">Sign In</Link>\n            )}\n            {userInfo && userInfo.isAdmin && (\n              <div className=\"dropdown\">\n                <a href=\"#\">Admin</a>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/orders\">Orders</Link>\n                    <Link to=\"/products\">Products</Link>\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </header>\n        <aside className=\"sidebar\">\n          <h3>Shopping Categories</h3>\n          <button className=\"sidebar-close-button\" onClick={closeMenu}>\n            x\n          </button>\n          <ul className=\"categories\">\n             <li>\n              <Link to=\"/category/Friends Clothing\">F.R.I.E.N.D.S Clothing</Link>\n            </li>\n            <li>\n              <Link to=\"/category/Friends Stuff\">F.R.I.E.N.D.S Stuff</Link>\n            </li>\n             <li>\n              <Link to=\"/category/Shirts\">Shirts</Link>\n            </li>\n            <li>\n              <Link to=\"/category/T-shirt\">T-shirt</Link>\n            </li>\n            <li>\n              <Link to=\"/category/Saree\">Saree</Link>\n            </li>\n            <li>\n              <Link to=\"/category/Panjabi\">Panjabi</Link>\n            </li>\n            <li>\n              <Link to=\"/category/Watch\">Watch</Link>\n            </li>\n            <li>\n              <Link to=\"/category/Bag\">Bag</Link>\n            </li>\n            <li>\n              <Link to=\"/category/Home Decor\">Home Decor</Link>\n            </li>\n\n          </ul>\n        </aside>\n        <main className=\"main\">\n          <div className=\"content\">\n            <Route path=\"/orders\" component={OrdersScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/products\" component={ProductsScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/signin\" component={SigninScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/category/:id\" component={HomeScreen} />\n            <Route path=\"/\" exact={true} component={HomeScreen} />\n          </div>\n        </main>\n        <footer className=\"footer\">All right reserved.</footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\data.js",["156"],"export default {\r\n    products:[{\r\n        _id:\"1\",\r\n        name: \"Jamdani Sharee\",\r\n        category:\"Sharee\",\r\n        image:\"/images/d4.jpg\",\r\n        price:330,\r\n        brand:\"Oloshoi\",\r\n        rating: 4.5,\r\n        numReviews: 10\r\n\r\n    },\r\n    {\r\n        _id:\"2\",\r\n        name: \"Jamdani Sharee\",\r\n        category:\"Sharee\",\r\n        image:\"/images/d3.jpg\",\r\n        price:330,\r\n        brand:\"Oloshoi\",\r\n        rating: 4.5,\r\n        numReviews: 10\r\n\r\n    },\r\n    {\r\n        _id:\"3\",\r\n        name: \"T-Shirt\",\r\n        category:\"Shirt\",\r\n        image:\"/images/d2.jpg\",\r\n        price:40,\r\n        brand:\"Oloshoi\",\r\n        rating: 4.5,\r\n        numReviews: 10\r\n\r\n    },\r\n    {\r\n        _id:\"4\",\r\n        name: \"Brow Pomade\",\r\n        category:\"Makeup\",\r\n        image:\"/images/d1.jpg\",\r\n        price:30,\r\n        brand:\"Oloshoi\",\r\n        rating: 4.5,\r\n        numReviews: 10\r\n\r\n    },\r\n]\r\n}",["157","158"],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\Screens\\HomeScreen.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\Screens\\ProductScreen.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\store.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\HomeScreen.js",["159","160"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport Rating from '../components/Rating';\r\n\r\nfunction HomeScreen(props) {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('');\r\n  const category = props.match.params.id ? props.match.params.id : '';\r\n  const productList = useSelector((state) => state.productList);\r\n  const { products, loading, error } = productList;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listProducts(category));\r\n\r\n    return () => {\r\n      //\r\n    };\r\n  }, [category]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(listProducts(category, searchKeyword, sortOrder));\r\n  };\r\n  const sortHandler = (e) => {\r\n    setSortOrder(e.target.value);\r\n    dispatch(listProducts(category, searchKeyword, sortOrder));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {category && <h2>{category}</h2>}\r\n\r\n      <ul className=\"filter\">\r\n        <li>\r\n          <form onSubmit={submitHandler}>\r\n            <input\r\n              name=\"searchKeyword\"\r\n              onChange={(e) => setSearchKeyword(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Search</button>\r\n          </form>\r\n        </li>\r\n        <li>\r\n          Sort By{' '}\r\n          <select name=\"sortOrder\" onChange={sortHandler}>\r\n            <option value=\"\">Newest</option>\r\n            <option value=\"lowest\">Lowest</option>\r\n            <option value=\"highest\">Highest</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <ul className=\"products\">\r\n          {products.map((product) => (\r\n            <li key={product._id}>\r\n              <div className=\"product\">\r\n                <Link to={'/product/' + product._id}>\r\n                  <img\r\n                    className=\"product-image\"\r\n                    src={product.image}\r\n                    alt=\"product\"\r\n                  />\r\n                </Link>\r\n                <div className=\"product-name\">\r\n                  <Link to={'/product/' + product._id}>{product.name}</Link>\r\n                </div>\r\n                <div className=\"product-brand\">{product.brand}</div>\r\n                <div className=\"product-price\">৳{product.price}</div>\r\n                <div className=\"product-rating\">\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={product.numReviews + ' reviews'}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default HomeScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ProductScreen.js",["161"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { detailsProduct, saveProductReview } from '../actions/productActions';\r\nimport Rating from '../components/Rating';\r\nimport { PRODUCT_REVIEW_SAVE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductScreen(props) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, loading, error } = productDetails;\r\n  const productReviewSave = useSelector((state) => state.productReviewSave);\r\n  const { success: productSaveSuccess } = productReviewSave;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (productSaveSuccess) {\r\n      alert('Review submitted successfully.');\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_REVIEW_SAVE_RESET });\r\n    }\r\n    dispatch(detailsProduct(props.match.params.id));\r\n    return () => {\r\n      //\r\n    };\r\n  }, [productSaveSuccess]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch actions\r\n    dispatch(\r\n      saveProductReview(props.match.params.id, {\r\n        name: userInfo.name,\r\n        rating: rating,\r\n        comment: comment,\r\n      })\r\n    );\r\n  };\r\n  const handleAddToCart = () => {\r\n    props.history.push('/cart/' + props.match.params.id + '?qty=' + qty);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"back-to-result\">\r\n        <Link to=\"/\">Back to result</Link>\r\n      </div>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error} </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"details\">\r\n            <div className=\"details-image\">\r\n              <img src={product.image} alt=\"product\"></img>\r\n            </div>\r\n            <div className=\"details-info\">\r\n              <ul>\r\n                <li>\r\n                  <h4>{product.name}</h4>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#reviews\">\r\n                    <Rating\r\n                      value={product.rating}\r\n                      text={product.numReviews + ' reviews'}\r\n                    />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  Price: <b>৳{product.price}</b>\r\n                </li>\r\n                <li>\r\n                  Description:\r\n                  <div>{product.description}</div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"details-action\">\r\n              <ul>\r\n                <li>Price: {product.price}</li>\r\n                <li>\r\n                  Status:{' '}\r\n                  {product.countInStock > 0 ? 'In Stock' : 'Unavailable.'}\r\n                </li>\r\n                <li>\r\n                  Qty:{' '}\r\n                  <select\r\n                    value={qty}\r\n                    onChange={(e) => {\r\n                      setQty(e.target.value);\r\n                    }}\r\n                  >\r\n                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                      <option key={x + 1} value={x + 1}>\r\n                        {x + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </li>\r\n                <li>\r\n                  {product.countInStock > 0 && (\r\n                    <button\r\n                      onClick={handleAddToCart}\r\n                      className=\"button primary\"\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"content-margined\">\r\n            <h2>Reviews</h2>\r\n            {!product.reviews.length && <div>There is no review</div>}\r\n            <ul className=\"review\" id=\"reviews\">\r\n              {product.reviews.map((review) => (\r\n                <li key={review._id}>\r\n                  <div>{review.name}</div>\r\n                  <div>\r\n                    <Rating value={review.rating}></Rating>\r\n                  </div>\r\n                  <div>{review.createdAt.substring(0, 10)}</div>\r\n                  <div>{review.comment}</div>\r\n                </li>\r\n              ))}\r\n              <li>\r\n                <h3>Write a customer review</h3>\r\n                {userInfo ? (\r\n                  <form onSubmit={submitHandler}>\r\n                    <ul className=\"form-container\">\r\n                      <li>\r\n                        <label htmlFor=\"rating\">Rating</label>\r\n                        <select\r\n                          name=\"rating\"\r\n                          id=\"rating\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=\"1\">1- Poor</option>\r\n                          <option value=\"2\">2- Fair</option>\r\n                          <option value=\"3\">3- Good</option>\r\n                          <option value=\"4\">4- Very Good</option>\r\n                          <option value=\"5\">5- Excelent</option>\r\n                        </select>\r\n                      </li>\r\n                      <li>\r\n                        <label htmlFor=\"comment\">Comment</label>\r\n                        <textarea\r\n                          name=\"comment\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></textarea>\r\n                      </li>\r\n                      <li>\r\n                        <button type=\"submit\" className=\"button primary\">\r\n                          Submit\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </form>\r\n                ) : (\r\n                  <div>\r\n                    Please <Link to=\"/signin\">Sign-in</Link> to write a review.\r\n                  </div>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default ProductScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\CartScreen.js",["162"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart} from '../actions/cartActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction CartScreen(props){\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search? Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) =>{\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    },[]);\r\n\r\n    const checkoutHandler = ()=>{\r\n        props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n           <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length === 0 ? \r\n                    <div>\r\n                        Cart is empty\r\n                    </div>\r\n                    :\r\n                    cartItems.map(item =>\r\n                        <li>\r\n                           <div className=\"cart-image\">\r\n                            <img src={item.image} alt=\"product\"/>\r\n                            </div>\r\n                            <div className=\"cart-name\">\r\n                              <div>\r\n                                  <Link to={\"/product\" + item.product}>\r\n                                      {item.name}\r\n                                  </Link> \r\n                              </div>\r\n                            <div>\r\n                                Qty:\r\n                    <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                      {[...Array(item.countInStock).keys()].map(x =>\r\n                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                      )}\r\n                    </select>\r\n                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)} >\r\n                      Delete\r\n                    </button>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"cart-price\">\r\n                                ৳{item.price}\r\n                            </div> \r\n                           </li> \r\n                           )\r\n                    }\r\n           </ul>\r\n        </div> \r\n        <div className=\"cart-action\"> \r\n            <h3>\r\n              Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n              :\r\n             ৳{cartItems.reduce((a,c) => a + c.price* c.qty, 0)}  \r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0 }>\r\n                Proceed to Checkout\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nexport default CartScreen;\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { addToCart, removeFromCart } from '../actions/cartActions';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n// function CartScreen(props) {\r\n\r\n//   const cart = useSelector(state => state.cart);\r\n\r\n//   const { cartItems } = cart;\r\n\r\n//   const productId = props.match.params.id;\r\n//   const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n//   const dispatch = useDispatch();\r\n//   const removeFromCartHandler = (productId) => {\r\n//     dispatch(removeFromCart(productId));\r\n//   }\r\n//   useEffect(() => {\r\n//     if (productId) {\r\n//       dispatch(addToCart(productId, qty));\r\n//     }\r\n//   }, []);\r\n\r\n//   const checkoutHandler = () => {\r\n//     props.history.push(\"/signin?redirect=shipping\");\r\n//   }\r\n\r\n//   return <div className=\"cart\">\r\n//     <div className=\"cart-list\">\r\n//       <ul className=\"cart-list-container\">\r\n//         <li>\r\n//           <h3>\r\n//             Shopping Cart\r\n//           </h3>\r\n//           <div>\r\n//             Price\r\n//           </div>\r\n//         </li>\r\n//         {\r\n//           cartItems.length === 0 ?\r\n//             <div>\r\n//               Cart is empty\r\n//           </div>\r\n//             :\r\n//             cartItems.map(item =>\r\n//               <li>\r\n//                 <div className=\"cart-image\">\r\n//                   <img src={item.image} alt=\"product\" />\r\n//                 </div>\r\n//                 <div className=\"cart-name\">\r\n//                   <div>\r\n//                     <Link to={\"/product/\" + item.product}>\r\n//                       {item.name}\r\n//                     </Link>\r\n\r\n//                   </div>\r\n//                   <div>\r\n//                     Qty:\r\n//                   <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n//                       {[...Array(item.countInStock).keys()].map(x =>\r\n//                         <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n//                       )}\r\n//                     </select>\r\n//                     <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)} >\r\n//                       Delete\r\n//                     </button>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"cart-price\">\r\n//                   ${item.price}\r\n//                 </div>\r\n//               </li>\r\n//             )\r\n//         }\r\n//       </ul>\r\n\r\n//     </div>\r\n//     <div className=\"cart-action\">\r\n//       <h3>\r\n//         Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n//         :\r\n//          $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\r\n//       </h3>\r\n//       <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n//         Proceed to Checkout\r\n//       </button>\r\n\r\n//     </div>\r\n\r\n//   </div>\r\n// }\r\n\r\n// export default CartScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\SigninScreen.js",["163"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signin } from '../actions/userActions';\r\n\r\nfunction SigninScreen(props) {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const dispatch = useDispatch();\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signin(email, password));\r\n\r\n  }\r\n  return <div className=\"form\">\r\n    <form onSubmit={submitHandler} >\r\n      <ul className=\"form-container\">\r\n        <li>\r\n          <h2>Sign-In</h2>\r\n        </li>\r\n        <li>\r\n          {loading && <div>Loading...</div>}\r\n          {error && <div>{error}</div>}\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <button type=\"submit\" className=\"button primary\">Signin</button>\r\n        </li>\r\n        <li>\r\n          New to amazona?\r\n        </li>\r\n        <li>\r\n          <Link to={redirect === \"/\" ? \"register\" : \"register?redirect=\" + redirect} className=\"button secondary text-center\" >Create your amazona account</Link>\r\n        </li>\r\n      </ul>\r\n    </form>\r\n  </div>\r\n}\r\nexport default SigninScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\RegisterScreen.js",["164","165"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../actions/userActions';\r\n\r\nfunction RegisterScreen(props) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rePassword, setRePassword] = useState('');\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password));\r\n  }\r\n  return <div className=\"form\">\r\n    <form onSubmit={submitHandler} >\r\n      <ul className=\"form-container\">\r\n        <li>\r\n          <h2>Create Account</h2>\r\n        </li>\r\n        <li>\r\n          {loading && <div>Loading...</div>}\r\n          {error && <div>{error}</div>}\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"rePassword\">Re-Enter Password</label>\r\n          <input type=\"password\" id=\"rePassword\" name=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <button type=\"submit\" className=\"button primary\">Register</button>\r\n        </li>\r\n        <li>\r\n          Already have an account?\r\n          <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button secondary text-center\" >Create your amazona account</Link>\r\n\r\n        </li>\r\n\r\n      </ul>\r\n    </form>\r\n  </div>\r\n}\r\nexport default RegisterScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ProductsScreen.js",["166","167","168","169","170"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts, saveProduct,deleteProduct } from '../actions/productActions';\r\n\r\n\r\nfunction ProductsScreen(props){\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const productList = useSelector((state) => state.productList);\r\n    const {loading,products,error} = productList;\r\n    const productSave = useSelector((state) => state.productSave);\r\n    const {loading: loadingSave, success: successSave,  error: errorSave} = productSave;\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {loading: loadingDelete, success: successDelete,  error: errorDelete} = productDelete;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(successSave){\r\n            setModalVisible(false);\r\n        }\r\n        dispatch(listProducts());\r\n        return () =>{\r\n            //\r\n        };\r\n    }, [successSave,successDelete]);\r\n\r\n    const openModal = (product) => {\r\n        setModalVisible(true);\r\n        setId(product._id);\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setDescription(product.description);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n      };\r\n      const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n          saveProduct({\r\n            _id: id,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description,\r\n          })\r\n        );\r\n      };\r\n      const deleteHandler = (product) =>{\r\n          dispatch(deleteProduct(product._id));\r\n      }\r\n\r\n    return  (\r\n    <div className=\"content content-margined\">\r\n        <div className=\"product-header\">\r\n            <h3>Products</h3>\r\n            <button className=\"button primary\" onClick={() => openModal({})}>Create Product</button>\r\n        </div>\r\n   {modalVisible && (\r\n     <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n            <ul className=\"form-container\">\r\n                <li>\r\n                    <h2>Create Product</h2>\r\n                </li>\r\n                <li>\r\n                    {loadingSave && <div>Loading...</div>}\r\n                    {errorSave && <div>{errorSave}</div>}\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"name\">Name</label><br/>\r\n                    <input type=\"text\" name=\"name\" value={name} id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"price\">Price</label><br/>\r\n                    <input type=\"text\" name=\"price\" value={price} id=\"price\" onChange={(e) => setPrice(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"image\">Image</label><br/>\r\n                    <input type=\"text\" name=\"image\" value={image} id=\"image\" onChange={(e) => setImage(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"brand\">Brand</label><br/>\r\n                    <input type=\"text\" name=\"brand\" value={brand} id=\"brand\" onChange={(e) => setBrand(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"countInStock\">Count In Stock</label><br/>\r\n                    <input type=\"text\" name=\"countInStock\" value={countInStock} id=\"countInStock\" onChange={(e) => setCountInStock(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"category\">Category</label><br/>\r\n                    <input type=\"text\" name=\"category\" value={category} id=\"category\" onChange={(e) => setCategory(e.target.value)}>\r\n                    </input>\r\n                </li>\r\n                <li>\r\n                    <label htmlFor=\"description\">Description</label><br/>\r\n                    <textarea type=\"text\" name=\"description\" value={description}  id=\"description\" onChange={(e) => setDescription(e.target.value)}>\r\n                    </textarea>\r\n                </li>\r\n                <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? 'Update' : 'Create'}</button>\r\n                </li>\r\n                <li>\r\n                    <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\">\r\n                    Back</button>\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    </div>\r\n    )}\r\n    \r\n\r\n\r\n        <div className=\"product-list\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                       <th>ID</th> \r\n                       <th>Name</th>\r\n                       <th>Price</th>\r\n                       <th>Category</th>\r\n                       <th>Brand</th>\r\n                       <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((product) => (\r\n                    <tr key={product._id}>\r\n                       <td>{product._id}</td>\r\n                       <td>{product.name}</td>\r\n                       <td>{product.price}</td>\r\n                       <td>{product.category}</td>\r\n                       <td>{product.brand}</td>\r\n                       <td>\r\n                       <button className=\"button\" onClick={() => openModal(product)}>Edit</button> {' '}\r\n                        <button className=\"button\"  onClick={() => deleteHandler(product)}>Delete</button>\r\n                       </td>\r\n                       </tr>\r\n                       ))}    \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div> \r\n    );\r\n}\r\nexport default ProductsScreen;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import axios from 'axios';\r\n// import {\r\n//   saveProduct,\r\n//   listProducts,\r\n//   deleteProdcut,\r\n// } from '../actions/productActions';\r\n\r\n// function ProductsScreen(props) {\r\n//   const [modalVisible, setModalVisible] = useState(false);\r\n//   const [id, setId] = useState('');\r\n//   const [name, setName] = useState('');\r\n//   const [price, setPrice] = useState('');\r\n//   const [image, setImage] = useState('');\r\n//   const [brand, setBrand] = useState('');\r\n//   const [category, setCategory] = useState('');\r\n//   const [countInStock, setCountInStock] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const productList = useSelector((state) => state.productList);\r\n//   const { loading, products, error } = productList;\r\n\r\n//   const productSave = useSelector((state) => state.productSave);\r\n//   const {\r\n//     loading: loadingSave,\r\n//     success: successSave,\r\n//     error: errorSave,\r\n//   } = productSave;\r\n\r\n//   const productDelete = useSelector((state) => state.productDelete);\r\n//   const {\r\n//     loading: loadingDelete,\r\n//     success: successDelete,\r\n//     error: errorDelete,\r\n//   } = productDelete;\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     if (successSave) {\r\n//       setModalVisible(false);\r\n//     }\r\n//     dispatch(listProducts());\r\n//     return () => {\r\n//       //\r\n//     };\r\n//   }, [successSave, successDelete]);\r\n\r\n//   const openModal = (product) => {\r\n//     setModalVisible(true);\r\n//     setId(product._id);\r\n//     setName(product.name);\r\n//     setPrice(product.price);\r\n//     setDescription(product.description);\r\n//     setImage(product.image);\r\n//     setBrand(product.brand);\r\n//     setCategory(product.category);\r\n//     setCountInStock(product.countInStock);\r\n//   };\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(\r\n//       saveProduct({\r\n//         _id: id,\r\n//         name,\r\n//         price,\r\n//         image,\r\n//         brand,\r\n//         category,\r\n//         countInStock,\r\n//         description,\r\n//       })\r\n//     );\r\n//   };\r\n//   const deleteHandler = (product) => {\r\n//     dispatch(deleteProdcut(product._id));\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div className=\"content content-margined\">\r\n//       <div className=\"product-header\">\r\n//         <h3>Products</h3>\r\n//         <button className=\"button primary\" onClick={() => openModal({})}>\r\n//           Create Product\r\n//         </button>\r\n//       </div>\r\n//       {modalVisible && (\r\n//         <div className=\"form\">\r\n//           <form onSubmit={submitHandler}>\r\n//             <ul className=\"form-container\">\r\n//               <li>\r\n//                 <h2>Create Product</h2>\r\n//               </li>\r\n//               <li>\r\n//                 {loadingSave && <div>Loading...</div>}\r\n//                 {errorSave && <div>{errorSave}</div>}\r\n//               </li>\r\n\r\n//               <li>\r\n//                 <label htmlFor=\"name\">Name</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   value={name}\r\n//                   id=\"name\"\r\n//                   onChange={(e) => setName(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"price\">Price</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"price\"\r\n//                   value={price}\r\n//                   id=\"price\"\r\n//                   onChange={(e) => setPrice(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"image\">Image</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"image\"\r\n//                   value={image}\r\n//                   id=\"image\"\r\n//                   onChange={(e) => setImage(e.target.value)}\r\n//                 ></input>\r\n               \r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"brand\">Brand</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"brand\"\r\n//                   value={brand}\r\n//                   id=\"brand\"\r\n//                   onChange={(e) => setBrand(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"countInStock\">CountInStock</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"countInStock\"\r\n//                   value={countInStock}\r\n//                   id=\"countInStock\"\r\n//                   onChange={(e) => setCountInStock(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"name\">Category</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"category\"\r\n//                   value={category}\r\n//                   id=\"category\"\r\n//                   onChange={(e) => setCategory(e.target.value)}\r\n//                 ></input>\r\n//               </li>\r\n//               <li>\r\n//                 <label htmlFor=\"description\">Description</label>\r\n//                 <textarea\r\n//                   name=\"description\"\r\n//                   value={description}\r\n//                   id=\"description\"\r\n//                   onChange={(e) => setDescription(e.target.value)}\r\n//                 ></textarea>\r\n//               </li>\r\n//               <li>\r\n//                 <button type=\"submit\" className=\"button primary\">\r\n//                   {id ? 'Update' : 'Create'}\r\n//                 </button>\r\n//               </li>\r\n//               <li>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setModalVisible(false)}\r\n//                   className=\"button secondary\"\r\n//                 >\r\n//                   Back\r\n//                 </button>\r\n//               </li>\r\n//             </ul>\r\n//           </form>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"product-list\">\r\n//         <table className=\"table\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>Name</th>\r\n//               <th>Price</th>\r\n//               <th>Category</th>\r\n//               <th>Brand</th>\r\n//               <th>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products.map((product) => (\r\n//               <tr key={product._id}>\r\n//                 <td>{product._id}</td>\r\n//                 <td>{product.name}</td>\r\n//                 <td>{product.price}</td>\r\n//                 <td>{product.category}</td>\r\n//                 <td>{product.brand}</td>\r\n//                 <td>\r\n//                   <button className=\"button\" onClick={() => openModal(product)}>\r\n//                     Edit\r\n//                   </button>{' '}\r\n//                   <button\r\n//                     className=\"button\"\r\n//                     onClick={() => deleteHandler(product)}\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default ProductsScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ShippingScreen.js",["171","172","173"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveShipping } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nfunction ShippingScreen(props) {\r\n\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShipping({ address, city, postalCode, country }));\r\n    props.history.push('payment');\r\n  }\r\n  return <div>\r\n    <CheckoutSteps step1 step2 ></CheckoutSteps>\r\n    <div className=\"form\">\r\n      <form onSubmit={submitHandler} >\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h2>Shipping</h2>\r\n          </li>\r\n\r\n          <li>\r\n            <label htmlFor=\"address\">\r\n              Address\r\n          </label>\r\n            <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}>\r\n            </input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"city\">\r\n              City\r\n          </label>\r\n            <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}>\r\n            </input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"postalCode\">\r\n              Postal Code\r\n          </label>\r\n            <input type=\"text\" name=\"postalCode\" id=\"postalCode\" onChange={(e) => setPostalCode(e.target.value)}>\r\n            </input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"country\">\r\n              Country\r\n          </label>\r\n            <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}>\r\n            </input>\r\n          </li>\r\n\r\n\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">Continue</button>\r\n          </li>\r\n\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n}\r\nexport default ShippingScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\PaymentScreen.js",["174","175","176"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { savePayment } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nfunction PaymentScreen(props) {\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePayment({ paymentMethod }));\r\n    props.history.push('placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>Payment</h2>\r\n            </li>\r\n\r\n            <li>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  id=\"paymentMethod\"\r\n                  value=\"bkash\"\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></input>\r\n                <label for=\"paymentMethod\">Bkash</label>\r\n              </div>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PaymentScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\PlaceOrderScreen.js",["177","178","179"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nfunction PlaceOrderScreen(props) {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { loading, success, error, order } = orderCreate;\r\n\r\n  const { cartItems, shipping, payment } = cart;\r\n  if (!shipping.address) {\r\n    props.history.push(\"/shipping\");\r\n  } else if (!payment.paymentMethod) {\r\n    props.history.push(\"/payment\");\r\n  }\r\n  const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 10;\r\n  const taxPrice = 0.15 * itemsPrice;\r\n  const totalPrice = itemsPrice + shippingPrice + taxPrice;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const placeOrderHandler = () => {\r\n    // create an order\r\n    dispatch(createOrder({\r\n      orderItems: cartItems, shipping, payment, itemsPrice, shippingPrice,\r\n      taxPrice, totalPrice\r\n    }));\r\n  }\r\n  useEffect(() => {\r\n    if (success) {\r\n      props.history.push(\"/order/\" + order._id);\r\n    }\r\n\r\n  }, [success]);\r\n\r\n  return <div>\r\n    <CheckoutSteps step1 step2 step3 step4 ></CheckoutSteps>\r\n    <div className=\"placeorder\">\r\n      <div className=\"placeorder-info\">\r\n        <div>\r\n          <h3>\r\n            Shipping\r\n          </h3>\r\n          <div>\r\n            {cart.shipping.address}, {cart.shipping.city},\r\n          {cart.shipping.postalCode}, {cart.shipping.country},\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Payment</h3>\r\n          <div>\r\n            Payment Method: {cart.payment.paymentMethod}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ul className=\"cart-list-container\">\r\n            <li>\r\n              <h3>\r\n                Shopping Cart\r\n          </h3>\r\n              <div>\r\n                Price\r\n          </div>\r\n            </li>\r\n            {\r\n              cartItems.length === 0 ?\r\n                <div>\r\n                  Cart is empty\r\n          </div>\r\n                :\r\n                cartItems.map(item =>\r\n                  <li>\r\n                    <div className=\"cart-image\">\r\n                      <img src={item.image} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"cart-name\">\r\n                      <div>\r\n                        <Link to={\"/product/\" + item.product}>\r\n                          {item.name}\r\n                        </Link>\r\n\r\n                      </div>\r\n                      <div>\r\n                        Qty: {item.qty}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"cart-price\">\r\n                    ৳{item.price}\r\n                    </div>\r\n                  </li>\r\n                )\r\n            }\r\n          </ul>\r\n        </div>\r\n\r\n      \r\n      </div>\r\n      <div className=\"placeorder-action\">\r\n        <ul>\r\n          <li>\r\n            <button className=\"button primary full-width\" onClick={placeOrderHandler} >Place Order</button>\r\n          </li>\r\n          <li>\r\n            <h3>Order Summary</h3>\r\n          </li>\r\n          <li>\r\n            <div>Items</div>\r\n            <div>৳{itemsPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Shipping</div>\r\n            <div>৳{shippingPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Tax</div>\r\n            <div>৳{taxPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Order Total</div>\r\n            <div>৳{totalPrice}</div>\r\n          </li>\r\n        </ul>\r\n\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport default PlaceOrderScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\OrderScreen.js",["180","181","182","183","184"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder, detailsOrder, payOrder } from '../actions/orderActions';\r\nfunction OrderScreen(props) {\r\n\r\n  const orderPay = useSelector(state => state.orderPay);\r\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      props.history.push(\"/profile\");\r\n    } else {\r\n      dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n    return () => {\r\n    };\r\n  }, [successPay]);\r\n\r\n  \r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  return loading ? <div>Loading ...</div> : error ? <div>{error}</div> :\r\n\r\n    <div>\r\n      <div className=\"placeorder\">\r\n        <div className=\"placeorder-info\">\r\n          <div>\r\n            <h3>\r\n              Shipping\r\n          </h3>\r\n            <div>\r\n              {order.shipping.address}, {order.shipping.city},\r\n          {order.shipping.postalCode}, {order.shipping.country},\r\n          </div>\r\n            <div>\r\n              {order.isDelivered ? \"Delivered at \" + order.deliveredAt : \"Not Delivered.\"}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3>Payment</h3>\r\n            <div>\r\n              Payment Method: {order.payment.paymentMethod}\r\n            </div>\r\n            \r\n          </div>\r\n          <div>\r\n            <ul className=\"cart-list-container\">\r\n              <li>\r\n                <h3>\r\n                  Shopping Cart\r\n          </h3>\r\n                <div>\r\n                  Price\r\n          </div>\r\n              </li>\r\n              {\r\n                order.orderItems.length === 0 ?\r\n                  <div>\r\n                    Cart is empty\r\n          </div>\r\n                  :\r\n                  order.orderItems.map(item =>\r\n                    <li key={item._id}>\r\n                      <div className=\"cart-image\">\r\n                        <img src={item.image} alt=\"product\" />\r\n                      </div>\r\n                      <div className=\"cart-name\">\r\n                        <div>\r\n                          <Link to={\"/product/\" + item.product}>\r\n                            {item.name}\r\n                          </Link>\r\n\r\n                        </div>\r\n                        <div>\r\n                          Qty: {item.qty}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-price\">\r\n                      ৳{item.price}\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              }\r\n            </ul>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"placeorder-action\">\r\n          <ul>\r\n           \r\n            <li>\r\n              <h3>Order Summary</h3>\r\n            </li>\r\n            <li>\r\n              <div>Items</div>\r\n              <div>৳{order.itemsPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Shipping</div>\r\n              <div>৳{order.shippingPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Tax</div>\r\n              <div>৳{order.taxPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Order Total</div>\r\n              <div>৳{order.totalPrice}</div>\r\n            </li>\r\n          </ul>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default OrderScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\OrdersScreen.js",["185","186","187","188","189"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listOrders, deleteOrder } from '../actions/orderActions';\r\n\r\nfunction OrdersScreen(props) {\r\n  const orderList = useSelector(state => state.orderList);\r\n  const { loading, orders, error } = orderList;\r\n\r\n  const orderDelete = useSelector(state => state.orderDelete);\r\n  const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listOrders());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successDelete]);\r\n\r\n  const deleteHandler = (order) => {\r\n    dispatch(deleteOrder(order._id));\r\n  }\r\n  return loading ? <div>Loading...</div> :\r\n    <div className=\"content content-margined\">\r\n\r\n      <div className=\"order-header\">\r\n        <h3>Orders</h3>\r\n      </div>\r\n      <div className=\"order-list\">\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>USER</th>\r\n             \r\n              \r\n              \r\n              \r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (<tr key={order._id}>\r\n              <td>{order._id}</td>\r\n              <td>{order.createdAt}</td>\r\n              <td>{order.totalPrice}</td>\r\n              <td>{order.user.name}</td>\r\n              \r\n              \r\n              <td>\r\n                <Link to={\"/order/\" + order._id} className=\"button secondary\" >Details</Link>\r\n                {' '}\r\n                <button type=\"button\" onClick={() => deleteHandler(order)} className=\"button secondary\">Delete</button>\r\n              </td>\r\n            </tr>))}\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n    </div>\r\n}\r\nexport default OrdersScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\screens\\ProfileScreen.js",["190"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout, update } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction ProfileScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    props.history.push(\"/signin\");\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(update({ userId: userInfo._id, email, name, password }))\r\n  }\r\n  const userUpdate = useSelector(state => state.userUpdate);\r\n  const { loading, success, error } = userUpdate;\r\n\r\n  const myOrderList = useSelector(state => state.myOrderList);\r\n  const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      console.log(userInfo.name)\r\n      setEmail(userInfo.email);\r\n      setName(userInfo.name);\r\n      setPassword(userInfo.password);\r\n    }\r\n    dispatch(listMyOrders());\r\n    return () => {\r\n\r\n    };\r\n  }, [userInfo])\r\n\r\n  return <div className=\"profile\">\r\n    <div className=\"profile-info\">\r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler} >\r\n          <ul className=\"form-container\">\r\n            <li>\r\n              <h2>User Profile</h2>\r\n            </li>\r\n            <li>\r\n              {loading && <div>Loading...</div>}\r\n              {error && <div>{error}</div>}\r\n              {success && <div>Profile Saved Successfully.</div>}\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"name\">\r\n                Name\r\n          </label>\r\n              <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n              </input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"email\">\r\n                Email\r\n          </label>\r\n              <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\r\n              </input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input value={password} type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n              </input>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">Update</button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" onClick={handleLogout} className=\"button secondary full-width\">Logout</button>\r\n            </li>\r\n\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div className=\"profile-orders content-margined\">\r\n      {\r\n        loadingOrders ? <div>Loading...</div> :\r\n          errorOrders ? <div>{errorOrders} </div> :\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>ACTIONS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map(order => <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid}</td>\r\n                  <td>\r\n                    <Link to={\"/order/\" + order._id}>DETAILS</Link>\r\n                  </td>\r\n                </tr>)}\r\n              </tbody>\r\n            </table>\r\n      }\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default ProfileScreen;","C:\\Users\\Msi\\Desktop\\BechaKena\\frontend\\src\\components\\Rating.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":45,"column":17,"nodeType":"199","endLine":45,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":1,"column":1,"nodeType":"202","endLine":47,"endColumn":2},{"ruleId":"191","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":13},{"ruleId":"209","severity":1,"message":"210","line":21,"column":6,"nodeType":"211","endLine":21,"endColumn":16,"suggestions":"212"},{"ruleId":"209","severity":1,"message":"213","line":31,"column":6,"nodeType":"211","endLine":31,"endColumn":26,"suggestions":"214"},{"ruleId":"209","severity":1,"message":"215","line":22,"column":7,"nodeType":"211","endLine":22,"endColumn":9,"suggestions":"216"},{"ruleId":"209","severity":1,"message":"217","line":21,"column":6,"nodeType":"211","endLine":21,"endColumn":16,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"219","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":20},{"ruleId":"209","severity":1,"message":"217","line":24,"column":6,"nodeType":"211","endLine":24,"endColumn":16,"suggestions":"220"},{"ruleId":"205","severity":1,"message":"221","line":17,"column":12,"nodeType":"207","messageId":"208","endLine":17,"endColumn":19},{"ruleId":"205","severity":1,"message":"222","line":17,"column":29,"nodeType":"207","messageId":"208","endLine":17,"endColumn":34},{"ruleId":"205","severity":1,"message":"223","line":21,"column":21,"nodeType":"207","messageId":"208","endLine":21,"endColumn":34},{"ruleId":"205","severity":1,"message":"224","line":21,"column":68,"nodeType":"207","messageId":"208","endLine":21,"endColumn":79},{"ruleId":"209","severity":1,"message":"210","line":33,"column":8,"nodeType":"211","endLine":33,"endColumn":35,"suggestions":"225"},{"ruleId":"205","severity":1,"message":"226","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"227","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"228","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":21},{"ruleId":"205","severity":1,"message":"226","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"227","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"228","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":21},{"ruleId":"205","severity":1,"message":"221","line":10,"column":11,"nodeType":"207","messageId":"208","endLine":10,"endColumn":18},{"ruleId":"205","severity":1,"message":"222","line":10,"column":29,"nodeType":"207","messageId":"208","endLine":10,"endColumn":34},{"ruleId":"209","severity":1,"message":"229","line":37,"column":6,"nodeType":"211","endLine":37,"endColumn":15,"suggestions":"230"},{"ruleId":"205","severity":1,"message":"231","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":21},{"ruleId":"205","severity":1,"message":"232","line":4,"column":37,"nodeType":"207","messageId":"208","endLine":4,"endColumn":45},{"ruleId":"205","severity":1,"message":"233","line":8,"column":20,"nodeType":"207","messageId":"208","endLine":8,"endColumn":30},{"ruleId":"205","severity":1,"message":"234","line":8,"column":60,"nodeType":"207","messageId":"208","endLine":8,"endColumn":68},{"ruleId":"209","severity":1,"message":"235","line":18,"column":6,"nodeType":"211","endLine":18,"endColumn":18,"suggestions":"236"},{"ruleId":"205","severity":1,"message":"237","line":1,"column":28,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"222","line":8,"column":28,"nodeType":"207","messageId":"208","endLine":8,"endColumn":33},{"ruleId":"205","severity":1,"message":"223","line":11,"column":20,"nodeType":"207","messageId":"208","endLine":11,"endColumn":33},{"ruleId":"205","severity":1,"message":"224","line":11,"column":66,"nodeType":"207","messageId":"208","endLine":11,"endColumn":77},{"ruleId":"209","severity":1,"message":"210","line":20,"column":6,"nodeType":"211","endLine":20,"endColumn":21,"suggestions":"238"},{"ruleId":"209","severity":1,"message":"210","line":39,"column":6,"nodeType":"211","endLine":39,"endColumn":16,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["240"],["241"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["242"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["245"],"'rePassword' is assigned a value but never used.",["246"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["247"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'order._id' and 'props.history'. Either include them or remove the dependency array.",["248"],"'createOrder' is defined but never used.","'payOrder' is defined but never used.","'loadingPay' is assigned a value but never used.","'errorPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'props.match.params.id'. Either include them or remove the dependency array.",["249"],"'useState' is defined but never used.",["250"],["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [category, dispatch]",{"range":"271","text":"272"},"Update the dependencies array to be: [dispatch, productSaveSuccess, props.match.params.id]",{"range":"273","text":"274"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"275","text":"276"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"277","text":"278"},{"range":"279","text":"278"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [order._id, props.history, success]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch, props.history, props.match.params.id, successPay]",{"range":"284","text":"285"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"286","text":"287"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"288","text":"289"},[756,766],"[category, dispatch]",[1222,1242],"[dispatch, productSaveSuccess, props.match.params.id]",[716,718],"[dispatch, productId, qty]",[695,705],"[props.history, redirect, userInfo]",[801,811],[1361,1388],"[successSave, successDelete, dispatch]",[1245,1254],"[order._id, props.history, success]",[622,634],"[dispatch, props.history, props.match.params.id, successPay]",[656,671],"[dispatch, successDelete]",[1313,1323],"[dispatch, userInfo]"]